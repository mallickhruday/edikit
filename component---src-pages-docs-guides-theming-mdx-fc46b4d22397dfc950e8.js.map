{"version":3,"sources":["webpack:///./src/components/theme-builder/styled.js","webpack:///./src/components/theme-builder/ThemeColors.js","webpack:///./src/components/theme-builder/BuilderTheme.js","webpack:///./src/components/theme-builder/PaneTheme.js","webpack:///./src/components/theme-builder/ThemeBuilder.js","webpack:///./src/pages/docs/guides/theming.mdx"],"names":["Label","styled_components_browser_esm","default","label","withConfig","displayName","Grid","div","ColorChip","props","color","Container","theme","pane","body","background","ThemeColors_ThemeColors","render","_this$props","this","values","onChange","react_default","a","createElement","htmlFor","edikit_dist","Input","type","id","value","colors","accent","muted","success","warning","danger","Component","BuilderTheme_BuilderTheme","Builder","title","subtitle","BuilderLabel","withLink","Block","builder","spacing","link","t","PaneTheme_Container","PaneTheme_PaneTheme","header","height","ThemeBuilder_Container","Icon","span","panes","contents","split","splitAxis","children","childOf","isCurrent","isUnique","theme_builder_ThemeBuilder","Object","formik_esm","enableReinitialize","isInitialValid","mapPropsToValues","lodash","cloneDeep","whiteTheme","handleSubmit","_ref","console","log","e","apply","arguments","d","prototype","handleChange","contentTypes","renderButton","renderIcon","renderPane","ThemableDemo","disableContentPadding","ThemeProvider","PanesManager","RootPane","components","objectWithoutProperties_default","dist","MDXTag","name","Layout","DocLayout","layoutProps","parentName","ariaHidden","href","className","_frontmatter"],"mappings":"sOAEaA,EAAQC,EAAAC,QAAOC,MAAfC,YAAAC,YAAA,iBAAQJ,EAAR,8EAOAK,EAAOL,EAAAC,QAAOK,IAAdH,YAAAC,YAAA,gBAAOJ,EAAP,+GAQAO,EAAYP,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,qBAAYJ,EAAZ,4DAIK,SAAAQ,GAAA,OAASA,EAAMC,QCX3BC,EAAYV,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,0BAAYJ,EAAZ,+DACY,SAAAQ,GAAA,OAASA,EAAMG,MAAMC,KAAKC,KAAKC,aAM5BC,4FACjBC,kBAAS,IAAAC,EAIDC,KAAKV,MAFLW,EAFCF,EAEDE,OACAC,EAHCH,EAGDG,SAGJ,OACIC,EAAAC,EAAAC,cAACb,EAAD,KACIW,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,qBAAf,cAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,oBACHC,MAAOV,EAAOW,OAAOhB,WACrBM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOhB,aAChCO,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,iBAAf,UAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,gBACHC,MAAOV,EAAOW,OAAOC,OACrBX,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOC,SAChCV,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,gBAAf,SAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,eACHC,MAAOV,EAAOW,OAAOE,MACrBZ,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOE,QAChCX,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,kBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,iBACHC,MAAOV,EAAOW,OAAOG,QACrBb,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOG,UAChCZ,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,kBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,iBACHC,MAAOV,EAAOW,OAAOI,QACrBd,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOI,UAChCb,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,iBAAf,UAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,gBACHC,MAAOV,EAAOW,OAAOK,OACrBf,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOK,cArE/BpB,CAAoBM,EAAAC,EAAMc,WCP1BC,oGACjBrB,kBAAS,IAAAC,EAIDC,KAAKV,MAFLW,EAFCF,EAEDE,OACAC,EAHCH,EAGDG,SAGJ,OACIC,EAAAC,EAAAC,cAACE,EAAAa,SACGC,MAAM,UACNC,SAAS,iBAETnB,EAAAC,EAAAC,cAACE,EAAAgB,cAAaC,aAAd,WAGArB,EAAAC,EAAAC,cAACE,EAAAkB,OAAMD,aACHrB,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,mBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,kBACHC,MAAOV,EAAOyB,QAAQC,QACtBzB,SAAUA,IAEdC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,sBAAf,cAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,qBACHC,MAAOV,EAAOyB,QAAQ9B,WACtBM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOyB,QAAQ9B,aACjCO,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,sBAAf,cAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,qBACHC,MAAOV,EAAOyB,QAAQE,KAAKrC,MAC3BW,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOyB,QAAQE,KAAKrC,UAG9CY,EAAAC,EAAAC,cAACE,EAAAgB,cAAaC,aAAd,gBAGArB,EAAAC,EAAAC,cAACE,EAAAkB,OAAMD,aAAP,gBAGArB,EAAAC,EAAAC,cAACE,EAAAgB,cAAaC,aAAd,SAGArB,EAAAC,EAAAC,cAACE,EAAAkB,OAAMD,aAAP,WAAAK,EA1DKV,CAAqBhB,EAAAC,EAAMc,YCA1CY,EAAYhD,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,wBAAYJ,EAAZ,iDACY,SAAAQ,GAAA,OAASA,EAAMG,MAAMC,KAAKC,KAAKC,aAK5BmC,4FACjBjC,kBAAS,IAAAC,EAIDC,KAAKV,MAFLW,EAFCF,EAEDE,OACAC,EAHCH,EAGDG,SAGJ,OACIC,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,gBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,eACHC,MAAOV,EAAOP,KAAKiC,QACnBzB,SAAUA,IAEdC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,sBAAf,iBAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,qBACHC,MAAOV,EAAOP,KAAKsC,OAAOC,OAC1B/B,SAAUA,IAEdC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,0BAAf,qBAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,yBACHC,MAAOV,EAAOP,KAAKsC,OAAOpC,WAC1BM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOP,KAAKsC,OAAOpC,aACrCO,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,wBAAf,mBAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,uBACHC,MAAOV,EAAOP,KAAKC,KAAKC,WACxBM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOP,KAAKC,KAAKC,kBAjDlCmC,CAAkB5B,EAAAC,EAAMc,WCFvCgB,EAAYpD,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,2BAAYJ,EAAZ,kDAGY,SAAAQ,GAAA,OAASA,EAAMG,MAAMmB,OAAOhB,aAGxCuC,EAAOrD,EAAAC,QAAOqD,KAAdnD,YAAAC,YAAA,sBAAOJ,EAAP,gDAGO,SAAAQ,GAAA,OAASA,EAAMG,MAAMmB,OAAOC,SAqBnCwB,GAlBWvD,EAAAC,QAAOK,IAAlBH,YAAAC,YAAA,0BAAWJ,EAAX,2DAIY,SAAAQ,GAAA,OAASA,EAAMG,MAAMC,KAAKC,KAAKC,eAgBzCc,GAAI,OACJ4B,YACAC,SACAC,UAAW,WACXC,UAAW,OAAQ,WAGnB/B,GAAI,OACJgC,QAAS,OACTC,aACAL,YACAC,SACAC,UAAW,aACXC,UACI,WACA,iBAIJ/B,GAAI,WACJgC,QAAS,OACTC,aACAL,WAEQ5B,GAAI,eACJD,KAAM,eACNkC,aACAC,cAGRL,SACAC,UAAW,aACXC,cAGA/B,GAAI,cACJgC,QAAS,OACTJ,WAEQ5B,GAAI,aACJD,KAAM,aACNkC,aACAC,cAGRL,SACAC,UAAW,aACXC,cAGA/B,GAAI,QACJgC,QAAS,OACTJ,YACAC,SACAC,UAAW,aACXC,UACI,YACA,kBAIJ/B,GAAI,YACJgC,QAAS,QACTJ,WAEQ5B,GAAI,gBACJD,KAAM,gBACNkC,aACAC,cAGRH,cAGA/B,GAAI,eACJgC,QAAS,QACTJ,WAEQ5B,GAAI,aACJD,KAAM,aACNkC,aACAC,cAGRH,eA2ERI,EA5KgBC,OAAAC,EAAA3C,EAAA0C,EACZE,sBACAC,kBACAC,iBAAkB,SAAA5D,GACd,OAAOwD,OAAAK,EAAAC,UAAAN,CAAUvC,EAAA8C,aAErBC,aAAc,SAACrD,EAADsD,GAAuBA,EAAZjE,MACrBkE,QAAQC,IAAIxD,KAPJ6C,CA4KhB,SAAAY,GAAA,SAAA7B,IAAA,OAAA6B,EAAAC,MAAA3D,KAAA4D,YAAA5D,KAAA,OAAA6D,IAAAhC,EAAA6B,GAAA7B,EAAAiC,UAtEIhE,kBAAS,IAAAC,EAKDC,KAAKV,MAFLW,EAHCF,EAGDE,OACA8D,EAJChE,EAIDgE,aAGEC,IAEEtD,GAAI,eACJuD,aAAc,iBAAM,gBACpBC,WAAY,kBAAM/D,EAAAC,EAAAC,cAAC8B,EAAD,WAClBgC,WAAY,kBACRhE,EAAAC,EAAAC,cAACR,GACGI,OAAQA,EACRC,SAAU6D,OAKlBrD,GAAI,gBACJuD,aAAc,iBAAM,iBACpBC,WAAY,kBAAM/D,EAAAC,EAAAC,cAAC8B,EAAD,WAClBgC,WAAY,kBACRhE,EAAAC,EAAAC,cAACc,GACGlB,OAAQA,EACRC,SAAU6D,OAKlBrD,GAAI,aACJuD,aAAc,iBAAM,cACpBC,WAAY,kBAAM/D,EAAAC,EAAAC,cAAC8B,EAAD,WAClBgC,WAAY,kBACRhE,EAAAC,EAAAC,cAAC0B,GACG9B,OAAQA,EACRC,SAAU6D,OAKlBrD,GAAI,aACJuD,aAAc,iBAAM,cACpBC,WAAY,kBAAM/D,EAAAC,EAAAC,cAAC8B,EAAD,WAClBgC,WAAY,kBACRhE,EAAAC,EAAAC,cAAC0B,GACG9B,OAAQA,EACRC,SAAU6D,OAM1B,OACI5D,EAAAC,EAAAC,cAAC+D,EAAAhE,GAAaiE,0BACVlE,EAAAC,EAAAC,cAACvB,EAAAwF,eAAc7E,MAAOQ,GAClBE,EAAAC,EAAAC,cAAC6B,EAAD,KACI/B,EAAAC,EAAAC,cAACE,EAAAgE,cACGlC,MAAOA,EACP2B,aAAcA,EACdlE,OAAQ,SAAAR,GAAA,OAASa,EAAAC,EAAAC,cAACE,EAAAiE,SAAalF,YAS3D,CAvE2Ba,EAAAC,EAAMc,0EC/HlBqC,GAAA,IAAEkB,EAAFlB,EAAEkB,WAAenF,EAAjBoF,IAAAnB,GAAA,sBAA4BpD,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,UAAUC,OAAQC,EAAA3E,EAAe4E,YAAa1F,EAAOmF,WAAYA,GAGzHtE,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,KAAKJ,WAAYA,EAAYnF,OAAQoB,GAAK,YAAYP,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,IAAIJ,WAAYA,EAAYQ,WAAW,KAAK3F,OAAQ4F,WAAa,OAAOC,KAAO,aAAahF,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,OAAOJ,WAAYA,EAAYQ,WAAW,IAAI3F,OAAQ8F,UAAY,qBAA3P,WACAjF,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,IAAIJ,WAAYA,GAAYtE,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,SAASJ,WAAYA,EAAYQ,WAAW,KAAzD,UAAzC,6DACA9E,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,KAAKJ,WAAYA,EAAYnF,OAAQoB,GAAK,kBAAkBP,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,IAAIJ,WAAYA,EAAYQ,WAAW,KAAK3F,OAAQ4F,WAAa,OAAOC,KAAO,mBAAmBhF,EAAAC,EAAAC,cAACsE,EAAAC,QAAOC,KAAK,OAAOJ,WAAYA,EAAYQ,WAAW,IAAI3F,OAAQ8F,UAAY,qBAAvQ,iBACAjF,EAAAC,EAAAC,cAACwC,EAAD,YAEawC","file":"component---src-pages-docs-guides-theming-mdx-fc46b4d22397dfc950e8.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Label = styled.label`\n    font-size: 14px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`\n\nexport const Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 2fr 16px;\n    grid-column-gap: 12px;\n    grid-row-gap: 12px;\n    align-items: center;\n`\n\nexport const ColorChip = styled.div`\n    width: 16px;\n    height: 16px;\n    border-radius: 1px;\n    background: ${props => props.color};\n`","import React from 'react'\nimport styled from 'styled-components'\nimport {\n    Builder,\n    BuilderLabel,\n    Block,\n    Input,\n} from 'edikit'\nimport { Grid, Label, ColorChip } from './styled'\n\nconst Container = styled.div`\n    background: ${props => props.theme.pane.body.background};\n    padding: 12px 16px;\n    height: 100%;\n    overflow: auto;\n`\n\nexport default class ThemeColors extends React.Component {\n    render() {\n        const {\n            values,\n            onChange,\n        } = this.props\n\n        return (\n            <Container>\n                <Grid>\n                    <Label htmlFor=\"colors.background\">\n                        background\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.background\"\n                        value={values.colors.background}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.background}/>\n                    <Label htmlFor=\"colors.accent\">\n                        accent\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.accent\"\n                        value={values.colors.accent}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.accent}/>\n                    <Label htmlFor=\"colors.muted\">\n                        muted\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.muted\"\n                        value={values.colors.muted}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.muted}/>\n                    <Label htmlFor=\"colors.success\">\n                        success\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.success\"\n                        value={values.colors.success}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.success}/>\n                    <Label htmlFor=\"colors.warning\">\n                        warning\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.warning\"\n                        value={values.colors.warning}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.warning}/>\n                    <Label htmlFor=\"colors.danger\">\n                        danger\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.danger\"\n                        value={values.colors.danger}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.danger}/>\n                </Grid>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n    Builder,\n    BuilderLabel,\n    Block,\n    Input,\n} from 'edikit'\nimport { Grid, Label, ColorChip } from './styled'\n\nexport default class BuilderTheme extends React.Component {\n    render() {\n        const {\n            values,\n            onChange,\n        } = this.props\n\n        return (\n            <Builder\n                title=\"Builder\"\n                subtitle=\"Builder theme\"\n            >\n                <BuilderLabel withLink={true}>\n                    Builder\n                </BuilderLabel>\n                <Block withLink={true}>\n                    <Grid>\n                        <Label htmlFor=\"builder.spacing\">\n                            spacing\n                        </Label>\n                        <Input\n                            type=\"text\"\n                            id=\"builder.spacing\"\n                            value={values.builder.spacing}\n                            onChange={onChange}\n                        />\n                        <span/>\n                        <Label htmlFor=\"builder.background\">\n                            background\n                        </Label>\n                        <Input\n                            type=\"text\"\n                            id=\"builder.background\"\n                            value={values.builder.background}\n                            onChange={onChange}\n                        />\n                        <ColorChip color={values.builder.background}/>\n                        <Label htmlFor=\"builder.link.color\">\n                            link color\n                        </Label>\n                        <Input\n                            type=\"text\"\n                            id=\"builder.link.color\"\n                            value={values.builder.link.color}\n                            onChange={onChange}\n                        />\n                        <ColorChip color={values.builder.link.color}/>\n                    </Grid>\n                </Block>\n                <BuilderLabel withLink={true}>\n                    BuilderLabel\n                </BuilderLabel>\n                <Block withLink={true}>\n                    BuilderLabel\n                </Block>\n                <BuilderLabel withLink={true}>\n                    Block\n                </BuilderLabel>\n                <Block withLink={true}>\n                    Block\n                </Block>\n            </Builder>\n        )\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n    Builder,\n    BuilderLabel,\n    Block,\n    Input,\n} from 'edikit'\nimport { Grid, Label, ColorChip } from './styled'\n\nconst Container = styled.div`\n    background: ${props => props.theme.pane.body.background};\n    padding: 12px 16px;\n    height: 100%;\n`\n\nexport default class PaneTheme extends React.Component {\n    render() {\n        const {\n            values,\n            onChange,\n        } = this.props\n\n        return (\n            <Container>\n                <Grid>\n                    <Label htmlFor=\"pane.spacing\">\n                        spacing\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.spacing\"\n                        value={values.pane.spacing}\n                        onChange={onChange}\n                    />\n                    <span/>\n                    <Label htmlFor=\"pane.header.height\">\n                        header height\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.header.height\"\n                        value={values.pane.header.height}\n                        onChange={onChange}\n                    />\n                    <span/>\n                    <Label htmlFor=\"pane.header.background\">\n                        header background\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.header.background\"\n                        value={values.pane.header.background}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.pane.header.background}/>\n                    <Label htmlFor=\"pane.body.background\">\n                        body background\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.body.background\"\n                        value={values.pane.body.background}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.pane.body.background}/>\n                </Grid>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { cloneDeep } from 'lodash'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { withFormik } from 'formik'\nimport {\n    whiteTheme,\n    PanesManager,\n    RootPane,\n} from 'edikit'\nimport ThemableDemo from '../demos/ThemableDemo'\nimport ThemeColors from './ThemeColors'\nimport BuilderTheme from './BuilderTheme'\nimport PaneTheme from './PaneTheme'\n\nconst Container = styled.div`\n    height: 700px;\n    position: relative;\n    background: ${props => props.theme.colors.background};\n`\n\nconst Icon = styled.span`\n    font-size: 12px;\n    font-weight: bolder;\n    color: ${props => props.theme.colors.accent};\n`\n\nconst DemoPane = styled.div`\n    padding: 16px;\n    font-size: 13px;\n    height: 100%;\n    background: ${props => props.theme.pane.body.background};\n`\n\nconst enhance = withFormik({\n    enableReinitialize: false,\n    isInitialValid: true,\n    mapPropsToValues: props => {\n        return cloneDeep(whiteTheme)\n    },\n    handleSubmit: (values, { props }) => {\n        console.log(values)\n    }\n})\n\nconst panes = [\n    {\n        id: 'root',\n        contents: [],\n        split: true,\n        splitAxis: 'vertical',\n        children: ['left', 'right'],\n    },\n    {\n        id: 'left',\n        childOf: 'root',\n        isCurrent: false,\n        contents: [],\n        split: true,\n        splitAxis: 'horizontal',\n        children: [\n            'left_top',\n            'left_bottom',\n        ],\n    },\n    {\n        id: 'left_top',\n        childOf: 'left',\n        isCurrent: true,\n        contents: [\n            {\n                id: 'theme_colors',\n                type: 'theme_colors',\n                isCurrent: true,\n                isUnique: false,\n            },\n        ],\n        split: false,\n        splitAxis: 'horizontal',\n        children: [],\n    },\n    {\n        id: 'left_bottom',\n        childOf: 'left',\n        contents: [\n            {\n                id: 'pane_theme',\n                type: 'pane_theme',\n                isCurrent: true,\n                isUnique: false,\n            },\n        ],\n        split: false,\n        splitAxis: 'horizontal',\n        children: [],\n    },\n    {\n        id: 'right',\n        childOf: 'root',\n        contents: [],\n        split: true,\n        splitAxis: 'horizontal',\n        children: [\n            'right_top',\n            'right_bottom',\n        ],\n    },\n    {\n        id: 'right_top',\n        childOf: 'right',\n        contents: [\n            {\n                id: 'builder_theme',\n                type: 'builder_theme',\n                isCurrent: true,\n                isUnique: false,\n            }\n        ],\n        children: [],\n    },\n    {\n        id: 'right_bottom',\n        childOf: 'right',\n        contents: [\n            {\n                id: 'form_theme',\n                type: 'form_theme',\n                isCurrent: true,\n                isUnique: false,\n            }\n        ],\n        children: [],\n    },\n]\n\nclass ThemeBuilder extends React.Component {\n    render() {\n        //console.log(this.props)\n        const {\n            values,\n            handleChange,\n        } = this.props\n\n        const contentTypes = [\n            {\n                id: 'theme_colors',\n                renderButton: () => 'Theme colors',\n                renderIcon: () => <Icon>C</Icon>,\n                renderPane: () => (\n                    <ThemeColors\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            },\n            {\n                id: 'builder_theme',\n                renderButton: () => 'Builder theme',\n                renderIcon: () => <Icon>B</Icon>,\n                renderPane: () => (\n                    <BuilderTheme\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            },\n            {\n                id: 'pane_theme',\n                renderButton: () => 'Pane theme',\n                renderIcon: () => <Icon>P</Icon>,\n                renderPane: () => (\n                    <PaneTheme\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            },\n            {\n                id: 'form_theme',\n                renderButton: () => 'Form theme',\n                renderIcon: () => <Icon>F</Icon>,\n                renderPane: () => (\n                    <PaneTheme\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            }\n        ]\n\n        return (\n            <ThemableDemo disableContentPadding={true}>\n                <ThemeProvider theme={values}>\n                    <Container>\n                        <PanesManager\n                            panes={panes}\n                            contentTypes={contentTypes}\n                            render={props => <RootPane {...props}/>}\n                        />\n                    </Container>\n                </ThemeProvider>\n            </ThemableDemo>\n        )\n    }\n}\n\nexport default enhance(ThemeBuilder)","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/raphael.benitte/projects/edikit/website/src/components/DocLayout.js\"\nimport ThemeBuilder from '../../../components/theme-builder/ThemeBuilder'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={DefaultLayout} layoutProps={props} components={components}>\n\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"theming\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"ariaHidden\":\"true\",\"href\":\"#theming\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Theming`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`edikit`}</MDXTag>{` is fully themable and ships with three pre-built themes.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"theme-builder\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"ariaHidden\":\"true\",\"href\":\"#theme-builder\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Theme Builder`}</MDXTag>\n<ThemeBuilder/></MDXTag>\n\nexport const _frontmatter = {};\n\n  "],"sourceRoot":""}