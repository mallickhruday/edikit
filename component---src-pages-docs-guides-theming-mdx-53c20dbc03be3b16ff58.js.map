{"version":3,"sources":["webpack:///./src/components/theme-builder/styled.js","webpack:///./src/components/theme-builder/ThemeColors.js","webpack:///./src/components/theme-builder/BuilderTheme.js","webpack:///./src/components/theme-builder/PaneTheme.js","webpack:///./src/components/theme-builder/ThemeBuilder.js","webpack:///./src/pages/docs/guides/theming.mdx"],"names":["Label","styled_components_browser_esm","default","label","withConfig","displayName","Grid","div","ColorChip","props","color","Container","theme","pane","body","background","ThemeColors_ThemeColors","render","_this$props","this","values","onChange","react_default","a","createElement","htmlFor","edikit_dist","Input","type","id","value","colors","accent","muted","success","warning","danger","Component","BuilderTheme_BuilderTheme","Builder","title","subtitle","BuilderLabel","withLink","Block","builder","spacing","link","t","PaneTheme_Container","PaneTheme_PaneTheme","header","height","ThemeBuilder_Container","Icon","span","theme_builder_ThemeBuilder","Object","formik_esm","enableReinitialize","isInitialValid","mapPropsToValues","lodash","cloneDeep","whiteTheme","handleSubmit","_ref","console","log","e","ThemeBuilder","_this","_React$Component","call","setCurrentPane","paneId","setState","panes","state","setPaneCurrentContent","contentId","removePaneContent","splitPane","axis","contents","split","splitAxis","children","childOf","isCurrent","isUnique","handleChange","contentTypes","renderButton","renderIcon","renderPane","ThemableDemo","disableContentPadding","ThemeProvider","PaneManager","init","root","find","components","objectWithoutProperties_default","dist","MDXTag","name","Layout","DocLayout","layoutProps","parentName","ariaHidden","href","className","_frontmatter"],"mappings":"6OAEaA,EAAQC,EAAAC,QAAOC,MAAfC,YAAAC,YAAA,iBAAQJ,EAAR,8EAOAK,EAAOL,EAAAC,QAAOK,IAAdH,YAAAC,YAAA,gBAAOJ,EAAP,+GAQAO,EAAYP,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,qBAAYJ,EAAZ,4DAIK,SAAAQ,GAAA,OAASA,EAAMC,QCX3BC,EAAYV,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,0BAAYJ,EAAZ,+DACY,SAAAQ,GAAA,OAASA,EAAMG,MAAMC,KAAKC,KAAKC,aAM5BC,4FACjBC,kBAAS,IAAAC,EAIDC,KAAKV,MAFLW,EAFCF,EAEDE,OACAC,EAHCH,EAGDG,SAGJ,OACIC,EAAAC,EAAAC,cAACb,EAAD,KACIW,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,qBAAf,cAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,oBACHC,MAAOV,EAAOW,OAAOhB,WACrBM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOhB,aAChCO,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,iBAAf,UAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,gBACHC,MAAOV,EAAOW,OAAOC,OACrBX,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOC,SAChCV,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,gBAAf,SAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,eACHC,MAAOV,EAAOW,OAAOE,MACrBZ,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOE,QAChCX,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,kBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,iBACHC,MAAOV,EAAOW,OAAOG,QACrBb,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOG,UAChCZ,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,kBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,iBACHC,MAAOV,EAAOW,OAAOI,QACrBd,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOI,UAChCb,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,iBAAf,UAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,gBACHC,MAAOV,EAAOW,OAAOK,OACrBf,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOW,OAAOK,cArE/BpB,CAAoBM,EAAAC,EAAMc,WCP1BC,oGACjBrB,kBAAS,IAAAC,EAIDC,KAAKV,MAFLW,EAFCF,EAEDE,OACAC,EAHCH,EAGDG,SAGJ,OACIC,EAAAC,EAAAC,cAACE,EAAAa,SACGC,MAAM,UACNC,SAAS,iBAETnB,EAAAC,EAAAC,cAACE,EAAAgB,cAAaC,aAAd,WAGArB,EAAAC,EAAAC,cAACE,EAAAkB,OAAMD,aACHrB,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,mBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,kBACHC,MAAOV,EAAOyB,QAAQC,QACtBzB,SAAUA,IAEdC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,sBAAf,cAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,qBACHC,MAAOV,EAAOyB,QAAQ9B,WACtBM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOyB,QAAQ9B,aACjCO,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,sBAAf,cAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,qBACHC,MAAOV,EAAOyB,QAAQE,KAAKrC,MAC3BW,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOyB,QAAQE,KAAKrC,UAG9CY,EAAAC,EAAAC,cAACE,EAAAgB,cAAaC,aAAd,gBAGArB,EAAAC,EAAAC,cAACE,EAAAkB,OAAMD,aAAP,gBAGArB,EAAAC,EAAAC,cAACE,EAAAgB,cAAaC,aAAd,SAGArB,EAAAC,EAAAC,cAACE,EAAAkB,OAAMD,aAAP,WAAAK,EA1DKV,CAAqBhB,EAAAC,EAAMc,YCA1CY,EAAYhD,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,wBAAYJ,EAAZ,iDACY,SAAAQ,GAAA,OAASA,EAAMG,MAAMC,KAAKC,KAAKC,aAK5BmC,4FACjBjC,kBAAS,IAAAC,EAIDC,KAAKV,MAFLW,EAFCF,EAEDE,OACAC,EAHCH,EAGDG,SAGJ,OACIC,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,gBAAf,WAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,eACHC,MAAOV,EAAOP,KAAKiC,QACnBzB,SAAUA,IAEdC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,sBAAf,iBAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,qBACHC,MAAOV,EAAOP,KAAKsC,OAAOC,OAC1B/B,SAAUA,IAEdC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,0BAAf,qBAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,yBACHC,MAAOV,EAAOP,KAAKsC,OAAOpC,WAC1BM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOP,KAAKsC,OAAOpC,aACrCO,EAAAC,EAAAC,cAACxB,GAAMyB,QAAQ,wBAAf,mBAGAH,EAAAC,EAAAC,cAACE,EAAAC,OACGC,KAAK,OACLC,GAAG,uBACHC,MAAOV,EAAOP,KAAKC,KAAKC,WACxBM,SAAUA,IAEdC,EAAAC,EAAAC,cAAChB,GAAUE,MAAOU,EAAOP,KAAKC,KAAKC,kBAjDlCmC,CAAkB5B,EAAAC,EAAMc,WCCvCgB,EAAYpD,EAAAC,QAAOK,IAAnBH,YAAAC,YAAA,2BAAYJ,EAAZ,kDAGY,SAAAQ,GAAA,OAASA,EAAMG,MAAMmB,OAAOhB,aAGxCuC,EAAOrD,EAAAC,QAAOqD,KAAdnD,YAAAC,YAAA,sBAAOJ,EAAP,gDAGO,SAAAQ,GAAA,OAASA,EAAMG,MAAMmB,OAAOC,SAyNzCwB,GAtNiBvD,EAAAC,QAAOK,IAAlBH,YAAAC,YAAA,0BAAWJ,EAAX,2DAIY,SAAAQ,GAAA,OAASA,EAAMG,MAAMC,KAAKC,KAAKC,aAGjC0C,OAAAC,EAAAnC,EAAAkC,EACZE,sBACAC,kBACAC,iBAAkB,SAAApD,GACd,OAAOgD,OAAAK,EAAAC,UAAAN,CAAU/B,EAAAsC,aAErBC,aAAc,SAAC7C,EAAD8C,GAAuBA,EAAZzD,MACrB0D,QAAQC,IAAIhD,KAPJqC,CA+MhB,SAAAY,GAnMI,SAAAC,EAAY7D,GAAO,IAAA8D,EAAA,OACfA,EAAAC,EAAAC,KAAAtD,KAAMV,IAANU,MA+FJuD,eAAiB,SAAAC,GACbJ,EAAKK,UACDC,MAAOpB,OAAA/B,EAAAgD,eAAAjB,CAAec,EAAKO,MAAMD,MAAOF,MAlG7BJ,EAsGnBQ,sBAAwB,SAACJ,EAAQK,GAC7BT,EAAKK,UACDC,MAAOpB,OAAA/B,EAAAqD,sBAAAtB,CAAsBc,EAAKO,MAAMD,MAAOF,EAAQK,MAxG5CT,EA4GnBU,kBAAoB,SAACN,EAAQK,GACzBT,EAAKK,UACDC,MAAOpB,OAAA/B,EAAAuD,kBAAAxB,CAAkBc,EAAKO,MAAMD,MAAOF,EAAQK,MA9GxCT,EAkHnBW,UAAY,SAACP,EAAQQ,GACjBZ,EAAKK,UACDC,MAAOpB,OAAA/B,EAAAwD,UAAAzB,CAAUc,EAAKO,MAAMD,MAAOF,EAAQQ,MAjH/CZ,EAAKO,OACDD,QAEQhD,GAAI,OACJuD,YACAC,SACAC,UAAW,WACXC,UAAW,OAAQ,WAGnB1D,GAAI,OACJ2D,QAAS,OACTC,aACAL,YACAC,SACAC,UAAW,aACXC,UACI,WACA,iBAIJ1D,GAAI,WACJ2D,QAAS,OACTC,aACAL,WAEQvD,GAAI,eACJD,KAAM,eACN6D,aACAC,cAGRL,SACAC,UAAW,aACXC,cAGA1D,GAAI,cACJ2D,QAAS,OACTJ,WAEQvD,GAAI,aACJD,KAAM,aACN6D,aACAC,cAGRL,SACAC,UAAW,aACXC,cAGA1D,GAAI,QACJ2D,QAAS,OACTJ,YACAC,SACAC,UAAW,aACXC,UACI,YACA,kBAIJ1D,GAAI,YACJ2D,QAAS,QACTJ,WAEQvD,GAAI,gBACJD,KAAM,gBACN6D,aACAC,cAGRH,cAGA1D,GAAI,eACJ2D,QAAS,QACTJ,WAEQvD,GAAI,aACJD,KAAM,aACN6D,aACAC,cAGRH,eA1FGhB,8BAwHnBtD,kBACIkD,QAAQC,IAAIjD,KAAKV,OADZ,IAAAS,EAKDC,KAAKV,MAFLW,EAHCF,EAGDE,OACAuE,EAJCzE,EAIDyE,aAGEC,IAEE/D,GAAI,eACJgE,aAAc,iBAAM,gBACpBC,WAAY,kBAAMxE,EAAAC,EAAAC,cAAC8B,EAAD,WAClByC,WAAY,kBACRzE,EAAAC,EAAAC,cAACR,GACGI,OAAQA,EACRC,SAAUsE,OAKlB9D,GAAI,gBACJgE,aAAc,iBAAM,iBACpBC,WAAY,kBAAMxE,EAAAC,EAAAC,cAAC8B,EAAD,WAClByC,WAAY,kBACRzE,EAAAC,EAAAC,cAACc,GACGlB,OAAQA,EACRC,SAAUsE,OAKlB9D,GAAI,aACJgE,aAAc,iBAAM,cACpBC,WAAY,kBAAMxE,EAAAC,EAAAC,cAAC8B,EAAD,WAClByC,WAAY,kBACRzE,EAAAC,EAAAC,cAAC0B,GACG9B,OAAQA,EACRC,SAAUsE,OAKlB9D,GAAI,aACJgE,aAAc,iBAAM,cACpBC,WAAY,kBAAMxE,EAAAC,EAAAC,cAAC8B,EAAD,WAClByC,WAAY,kBACRzE,EAAAC,EAAAC,cAAC0B,GACG9B,OAAQA,EACRC,SAAUsE,OAM1B,OACIrE,EAAAC,EAAAC,cAACwE,EAAAzE,GAAa0E,0BACV3E,EAAAC,EAAAC,cAACvB,EAAAiG,eAActF,MAAOQ,GAClBE,EAAAC,EAAAC,cAAC6B,EAAD,KACI/B,EAAAC,EAAAC,cAACE,EAAAyE,aACGC,KAAM,aACNvB,MAAO1D,KAAK2D,MAAMD,MAClBwB,KAAMlF,KAAK2D,MAAMD,MAAMyB,KAAK,SAAAzF,GAAA,gBAAQA,EAAK2E,UACzCI,aAAcA,EACdlB,eAAgBvD,KAAKuD,eACrBK,sBAAuB5D,KAAK4D,sBAC5BE,kBAAmB9D,KAAK8D,kBACxBC,UAAW/D,KAAK+D,kBAS5C,CApM2B5D,EAAAC,EAAMc,2ECxClB6B,GAAA,IAAEqC,EAAFrC,EAAEqC,WAAe9F,EAAjB+F,IAAAtC,GAAA,sBAA4B5C,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,UAAUC,OAAQC,EAAAtF,EAAeuF,YAAarG,EAAO8F,WAAYA,GAGzHjF,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,KAAKJ,WAAYA,EAAY9F,OAAQoB,GAAK,YAAYP,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,IAAIJ,WAAYA,EAAYQ,WAAW,KAAKtG,OAAQuG,WAAa,OAAOC,KAAO,aAAa3F,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,OAAOJ,WAAYA,EAAYQ,WAAW,IAAItG,OAAQyG,UAAY,qBAA3P,WACA5F,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,IAAIJ,WAAYA,GAAYjF,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,SAASJ,WAAYA,EAAYQ,WAAW,KAAzD,UAAzC,6DACAzF,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,KAAKJ,WAAYA,EAAY9F,OAAQoB,GAAK,kBAAkBP,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,IAAIJ,WAAYA,EAAYQ,WAAW,KAAKtG,OAAQuG,WAAa,OAAOC,KAAO,mBAAmB3F,EAAAC,EAAAC,cAACiF,EAAAC,QAAOC,KAAK,OAAOJ,WAAYA,EAAYQ,WAAW,IAAItG,OAAQyG,UAAY,qBAAvQ,iBACA5F,EAAAC,EAAAC,cAACgC,EAAD,YAEa2D","file":"component---src-pages-docs-guides-theming-mdx-53c20dbc03be3b16ff58.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Label = styled.label`\n    font-size: 14px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`\n\nexport const Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 2fr 16px;\n    grid-column-gap: 12px;\n    grid-row-gap: 12px;\n    align-items: center;\n`\n\nexport const ColorChip = styled.div`\n    width: 16px;\n    height: 16px;\n    border-radius: 1px;\n    background: ${props => props.color};\n`","import React from 'react'\nimport styled from 'styled-components'\nimport {\n    Builder,\n    BuilderLabel,\n    Block,\n    Input,\n} from 'edikit'\nimport { Grid, Label, ColorChip } from './styled'\n\nconst Container = styled.div`\n    background: ${props => props.theme.pane.body.background};\n    padding: 12px 16px;\n    height: 100%;\n    overflow: auto;\n`\n\nexport default class ThemeColors extends React.Component {\n    render() {\n        const {\n            values,\n            onChange,\n        } = this.props\n\n        return (\n            <Container>\n                <Grid>\n                    <Label htmlFor=\"colors.background\">\n                        background\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.background\"\n                        value={values.colors.background}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.background}/>\n                    <Label htmlFor=\"colors.accent\">\n                        accent\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.accent\"\n                        value={values.colors.accent}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.accent}/>\n                    <Label htmlFor=\"colors.muted\">\n                        muted\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.muted\"\n                        value={values.colors.muted}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.muted}/>\n                    <Label htmlFor=\"colors.success\">\n                        success\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.success\"\n                        value={values.colors.success}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.success}/>\n                    <Label htmlFor=\"colors.warning\">\n                        warning\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.warning\"\n                        value={values.colors.warning}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.warning}/>\n                    <Label htmlFor=\"colors.danger\">\n                        danger\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"colors.danger\"\n                        value={values.colors.danger}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.colors.danger}/>\n                </Grid>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n    Builder,\n    BuilderLabel,\n    Block,\n    Input,\n} from 'edikit'\nimport { Grid, Label, ColorChip } from './styled'\n\nexport default class BuilderTheme extends React.Component {\n    render() {\n        const {\n            values,\n            onChange,\n        } = this.props\n\n        return (\n            <Builder\n                title=\"Builder\"\n                subtitle=\"Builder theme\"\n            >\n                <BuilderLabel withLink={true}>\n                    Builder\n                </BuilderLabel>\n                <Block withLink={true}>\n                    <Grid>\n                        <Label htmlFor=\"builder.spacing\">\n                            spacing\n                        </Label>\n                        <Input\n                            type=\"text\"\n                            id=\"builder.spacing\"\n                            value={values.builder.spacing}\n                            onChange={onChange}\n                        />\n                        <span/>\n                        <Label htmlFor=\"builder.background\">\n                            background\n                        </Label>\n                        <Input\n                            type=\"text\"\n                            id=\"builder.background\"\n                            value={values.builder.background}\n                            onChange={onChange}\n                        />\n                        <ColorChip color={values.builder.background}/>\n                        <Label htmlFor=\"builder.link.color\">\n                            link color\n                        </Label>\n                        <Input\n                            type=\"text\"\n                            id=\"builder.link.color\"\n                            value={values.builder.link.color}\n                            onChange={onChange}\n                        />\n                        <ColorChip color={values.builder.link.color}/>\n                    </Grid>\n                </Block>\n                <BuilderLabel withLink={true}>\n                    BuilderLabel\n                </BuilderLabel>\n                <Block withLink={true}>\n                    BuilderLabel\n                </Block>\n                <BuilderLabel withLink={true}>\n                    Block\n                </BuilderLabel>\n                <Block withLink={true}>\n                    Block\n                </Block>\n            </Builder>\n        )\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n    Builder,\n    BuilderLabel,\n    Block,\n    Input,\n} from 'edikit'\nimport { Grid, Label, ColorChip } from './styled'\n\nconst Container = styled.div`\n    background: ${props => props.theme.pane.body.background};\n    padding: 12px 16px;\n    height: 100%;\n`\n\nexport default class PaneTheme extends React.Component {\n    render() {\n        const {\n            values,\n            onChange,\n        } = this.props\n\n        return (\n            <Container>\n                <Grid>\n                    <Label htmlFor=\"pane.spacing\">\n                        spacing\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.spacing\"\n                        value={values.pane.spacing}\n                        onChange={onChange}\n                    />\n                    <span/>\n                    <Label htmlFor=\"pane.header.height\">\n                        header height\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.header.height\"\n                        value={values.pane.header.height}\n                        onChange={onChange}\n                    />\n                    <span/>\n                    <Label htmlFor=\"pane.header.background\">\n                        header background\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.header.background\"\n                        value={values.pane.header.background}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.pane.header.background}/>\n                    <Label htmlFor=\"pane.body.background\">\n                        body background\n                    </Label>\n                    <Input\n                        type=\"text\"\n                        id=\"pane.body.background\"\n                        value={values.pane.body.background}\n                        onChange={onChange}\n                    />\n                    <ColorChip color={values.pane.body.background}/>\n                </Grid>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { cloneDeep } from 'lodash'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { withFormik } from 'formik'\nimport {\n    whiteTheme,\n    PaneManager,\n    setPaneCurrentContent,\n    setCurrentPane,\n    removePaneContent,\n    splitPane,\n} from 'edikit'\nimport ThemableDemo from '../demos/ThemableDemo'\nimport ThemeColors from './ThemeColors'\nimport BuilderTheme from './BuilderTheme'\nimport PaneTheme from './PaneTheme'\n\nconst Container = styled.div`\n    height: 700px;\n    position: relative;\n    background: ${props => props.theme.colors.background};\n`\n\nconst Icon = styled.span`\n    font-size: 12px;\n    font-weight: bolder;\n    color: ${props => props.theme.colors.accent};\n`\n\nconst DemoPane = styled.div`\n    padding: 16px;\n    font-size: 13px;\n    height: 100%;\n    background: ${props => props.theme.pane.body.background};\n`\n\nconst enhance = withFormik({\n    enableReinitialize: false,\n    isInitialValid: true,\n    mapPropsToValues: props => {\n        return cloneDeep(whiteTheme)\n    },\n    handleSubmit: (values, { props }) => {\n        console.log(values)\n    }\n})\n\nclass ThemeBuilder extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            panes: [\n                {\n                    id: 'root',\n                    contents: [],\n                    split: true,\n                    splitAxis: 'vertical',\n                    children: ['left', 'right'],\n                },\n                {\n                    id: 'left',\n                    childOf: 'root',\n                    isCurrent: false,\n                    contents: [],\n                    split: true,\n                    splitAxis: 'horizontal',\n                    children: [\n                        'left_top',\n                        'left_bottom',\n                    ],\n                },\n                {\n                    id: 'left_top',\n                    childOf: 'left',\n                    isCurrent: true,\n                    contents: [\n                        {\n                            id: 'theme_colors',\n                            type: 'theme_colors',\n                            isCurrent: true,\n                            isUnique: false,\n                        },\n                    ],\n                    split: false,\n                    splitAxis: 'horizontal',\n                    children: [],\n                },\n                {\n                    id: 'left_bottom',\n                    childOf: 'left',\n                    contents: [\n                        {\n                            id: 'pane_theme',\n                            type: 'pane_theme',\n                            isCurrent: true,\n                            isUnique: false,\n                        },\n                    ],\n                    split: false,\n                    splitAxis: 'horizontal',\n                    children: [],\n                },\n                {\n                    id: 'right',\n                    childOf: 'root',\n                    contents: [],\n                    split: true,\n                    splitAxis: 'horizontal',\n                    children: [\n                        'right_top',\n                        'right_bottom',\n                    ],\n                },\n                {\n                    id: 'right_top',\n                    childOf: 'right',\n                    contents: [\n                        {\n                            id: 'builder_theme',\n                            type: 'builder_theme',\n                            isCurrent: true,\n                            isUnique: false,\n                        }\n                    ],\n                    children: [],\n                },\n                {\n                    id: 'right_bottom',\n                    childOf: 'right',\n                    contents: [\n                        {\n                            id: 'form_theme',\n                            type: 'form_theme',\n                            isCurrent: true,\n                            isUnique: false,\n                        }\n                    ],\n                    children: [],\n                },\n            ]\n        }\n    }\n\n    setCurrentPane = paneId => {\n        this.setState({\n            panes: setCurrentPane(this.state.panes, paneId),\n        })\n    }\n\n    setPaneCurrentContent = (paneId, contentId) => {\n        this.setState({\n            panes: setPaneCurrentContent(this.state.panes, paneId, contentId),\n        })\n    }\n\n    removePaneContent = (paneId, contentId) => {\n        this.setState({\n            panes: removePaneContent(this.state.panes, paneId, contentId),\n        })\n    }\n\n    splitPane = (paneId, axis) => {\n        this.setState({\n            panes: splitPane(this.state.panes, paneId, axis)\n        })\n    }\n\n    render() {\n        console.log(this.props)\n        const {\n            values,\n            handleChange,\n        } = this.props\n\n        const contentTypes = [\n            {\n                id: 'theme_colors',\n                renderButton: () => 'Theme colors',\n                renderIcon: () => <Icon>C</Icon>,\n                renderPane: () => (\n                    <ThemeColors\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            },\n            {\n                id: 'builder_theme',\n                renderButton: () => 'Builder theme',\n                renderIcon: () => <Icon>B</Icon>,\n                renderPane: () => (\n                    <BuilderTheme\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            },\n            {\n                id: 'pane_theme',\n                renderButton: () => 'Pane theme',\n                renderIcon: () => <Icon>P</Icon>,\n                renderPane: () => (\n                    <PaneTheme\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            },\n            {\n                id: 'form_theme',\n                renderButton: () => 'Form theme',\n                renderIcon: () => <Icon>F</Icon>,\n                renderPane: () => (\n                    <PaneTheme\n                        values={values}\n                        onChange={handleChange}\n                    />\n                ),\n            }\n        ]\n\n        return (\n            <ThemableDemo disableContentPadding={true}>\n                <ThemeProvider theme={values}>\n                    <Container>\n                        <PaneManager\n                            init={() => {}}\n                            panes={this.state.panes}\n                            root={this.state.panes.find(pane => pane.childOf === undefined)}\n                            contentTypes={contentTypes}\n                            setCurrentPane={this.setCurrentPane}\n                            setPaneCurrentContent={this.setPaneCurrentContent}\n                            removePaneContent={this.removePaneContent}\n                            splitPane={this.splitPane}\n                        />\n                    </Container>\n                </ThemeProvider>\n            </ThemableDemo>\n        )\n    }\n}\n\nexport default enhance(ThemeBuilder)","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/raphael.benitte/projects/edikit/website/src/components/DocLayout.js\"\nimport ThemeBuilder from '../../../components/theme-builder/ThemeBuilder'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={DefaultLayout} layoutProps={props} components={components}>\n\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"theming\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"ariaHidden\":\"true\",\"href\":\"#theming\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Theming`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`edikit`}</MDXTag>{` is fully themable and ships with three pre-built themes.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"theme-builder\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"ariaHidden\":\"true\",\"href\":\"#theme-builder\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Theme Builder`}</MDXTag>\n<ThemeBuilder/></MDXTag>\n\nexport const _frontmatter = {};\n\n  "],"sourceRoot":""}